# #############################
# Definition of SW infrastructure for the Angular app BACKEND ONLY
# Defines:
# - services
# - networks
# - volumes
# Uses profiles to control what configurations launch, depending on the user-scenario
# ##############################
version: "3.8"

networks:
  frontnet: 
    name: frontnet
  backnet:
    name: backnet

services:
  # #######################
  # Frontend UI service
  # #######################
  webserver:
    build:
      context: ../../frontend
      dockerfile: ./deploy/Dockerfile
      target: production
      no_cache: true

    image: sergiunagy/finapp-web-ui
    container_name: finapp-web-serv
    networks:
      - frontnet
    ports:
      - "8000:80"
    environment:
    - NGINX_HOST=localhost
    - NGINX_PORT=80

    profiles: ["prod"]

  # #######################
  # Authentication & Authorization service
  # #######################
  auth-backend:
    build:
      context: ../../backend/auth
      dockerfile: ./deploy/Dockerfile
      target: production
      no_cache: true
    image: sergiunagy/finapp-auth
    container_name: finapp-auth

    networks:
      backnet:
        aliases:
          - authentication-server

    environment: 
      FINNHUB_APIKEY : "ck47m71r01qus81pr1ogck47m71r01qus81pr1p0"
      FRONTEND_HOST_DEV : "http://localhost:8000"
      FRONTEND_HOST : "http://localhost:8080"

    profiles: ["prod"]    

  # #######################
  # Dashboards service
  # #######################
  dashboards-backend:
    build:
      context: ../../backend/dashboards
      dockerfile: ./deploy/Dockerfile
      target: production
      no_cache: true
    image: sergiunagy/finapp-dashboards
    container_name: finapp-dashboards

    networks:
      backnet:
        aliases:
          - dashboards-server

    environment:
      - NODE_ENV=production
      - ENV_LOCATION=./environments
      - DB_HOST=dashboards-store-server
      - DB_PORT=5432
      - DB_USER=finadmin
      - DB_PASS=finpas357
      - DB_NAME=dashboards
      - DB_TYPE=postgres
      - DB_SYNC_FLAG=true
    depends_on:
      - dashboardsdb

    profiles: ["prod"]

  # #######################
  # Dashboards Storage service 
  # #######################
  dashboardsdb:
    image: postgres # sergiunagy/finapp-dashboards-store
    container_name: finapp-dashboards-store
    environment:
      POSTGRES_PASSWORD: finpas357
      POSTGRES_USER: finadmin
      POSTGRES_DB: dashboards

    networks:
      backnet:
        aliases:
          - dashboards-store-server

    restart: always
    profiles: ["prod"]

  # #######################
  # Ingress service
  # #######################
  ingress-server:
    privileged: true
    build:
      context: ../../backend/ingress
      dockerfile: ./deploy/Dockerfile
      target: production
      no_cache: true
    image: sergiunagy/finapp-ingress
    container_name: dev-finapp-ingress

    networks:
      - backnet
    # this is a proxy service and is bound to the localhost network stack
    ports:
      - "8090:80"
    # the service waits for authorization and the dashboards services to be up because it requires them when checking proxy paths  
    depends_on:
      - auth-backend
      - dashboards-backend
    # enable proper logging and allow DELETE and PUT through the WAF
    environment:
    - MODSEC_AUDIT_LOG="/var/log/modsec_audit.log"
    - ALLOWED_METHODS=GET HEAD POST OPTIONS DELETE PUT
    - NGINX_HOST=localhost
    profiles: ["prod"]

    
