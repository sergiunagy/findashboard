# #############################
# Definition of SW infrastructure for the Angular app BACKEND ONLY
# Defines:
# - services
# - networks
# - volumes
# Uses profiles to control what configurations launch, depending on the user-scenario
# ##############################
version: "3.8"

networks:
  frontnet: 
    name: frontnet
  backnet:
    name: backnet

services:
  # #######################
  # Frontend UI service
  # #######################
  webserver:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: sergiunagy/finwebserver

    ports:
    - "8080:80"
    environment:
    - NGINX_HOST=localhost
    - NGINX_PORT=80

    profiles: ["prod"]
  # #######################
  # Authentication & Authorization service
  # #######################
  auth-backend:
    build:
      context: ./auth
      dockerfile: Dockerfile
    image: sergiunagy/finapp-auth-serv
    container_name: finapp-auth-serv

    networks:
      backnet:
        aliases:
          - authentication-server
    environment: 
      FINNHUB_APIKEY : "ck47m71r01qus81pr1ogck47m71r01qus81pr1p0"
      FRONTEND_HOST_DEV : "http://localhost:8000"
      FRONTEND_HOST : "http://localhost:8080"

    profiles: ["prod"]    

  # #######################
  # Dashboards service
  # #######################
  dashboards-backend:
    build:
      context: ./dashboards
      dockerfile: Dockerfile
    image: sergiunagy/finapp-dashboards-serv
    container_name: finapp-dashboards-serv

    networks:
      backnet:
        aliases:
          - dashboards-server
    environment: 
      FRONTEND_HOST_DEV : "http://localhost:8000"
      FRONTEND_HOST : "http://localhost:8080"

    profiles: ["prod"]

  # #######################
  # DataStore service 
  # #######################
  datastore:
    build:
      context: ./datastore
      dockerfile: Dockerfile
    image: sergiunagy/finapp-datastore-serv
    container_name: finapp-datastore-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=findemoadmin
      - MONGO_INITDB_ROOT_PASSWORD=findemoadmin_pas_951
      - MONGO_DB_PORT=27017

    # mount storage for persistent volume --> needs storage transfer strategy
    # - dbstorage:/data/db
    networks:
      backnet:
        aliases:
          - datastore-server
          
    profiles: ["prod"]

  # #######################
  # DataStore Admin service  - dev only
  # #######################
  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: mongo-express
    ports:
      - 5090:8081
    environment:
    - ME_CONFIG_MONGODB_ADMINUSERNAME=findemoadmin
    - ME_CONFIG_MONGODB_ADMINPASSWORD=findemoadmin_pas_951
    - ME_CONFIG_MONGODB_SERVER=datastore-server
    depends_on:
      - datastore
    # Mongo container is available but the server starts responding only after init. TODO: health check as start condition ?
    restart: always
    networks:
      - backnet
    
    profiles: ["prod"]

  # #######################
  # Ingress service
  # #######################
  ingress-server:
    privileged: true
    build:
      context: ./ingress
      dockerfile: Dockerfile
    image: sergiunagy/finappingress
    container_name: finapp-ingress-nginx

    networks:
      - backnet
    # this is a proxy service and is bound to the localhost network stack
    ports:
      - "8090:80"
    # the service waits for authorization and the dashboards services to be up because it requires them when checking proxy paths  
    depends_on:
      - auth-backend
      - dashboards-backend
    # enable proper logging and allow DELETE and PUT through the WAF
    environment:
    - MODSEC_AUDIT_LOG="/var/log/modsec_audit.log"
    - ALLOWED_METHODS=GET HEAD POST OPTIONS DELETE PUT
    - NGINX_HOST=localhost
    profiles: ["prod"]

    
